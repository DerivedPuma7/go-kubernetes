apiVersion: apps/v1
kind: Deployment
metadata:
  name: "goserver"
  labels:
    app: "goserver"
spec:
  selector:
    matchLabels:
      app: "goserver"
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: "goserver"
          image: "derivedpuma7/kubernetes-go:v5.6"

          resources:
            requests: # minimo -> sequestrando (reservando) recursos do cluster para os pods
              cpu: "0.05" # 1vcpu = 1000m (milicore)
              memory: 20Mi
            limits: # máximo
              cpu: "0.05"
              memory: 25Mi

          startupProbe:
            httpGet:
              path: /healthz
              port: 3000
            periodSeconds: 3
            failureThreshold: 30

          readinessProbe: # realiza health check da aplicação para permitir tráfego apenas quando tiver ready
            httpGet:
              path: /healthz
              port: 3000
            periodSeconds: 2
            failureThreshold: 1

          livenessProbe: # realiza health check da aplicação já em execução
            httpGet:
              path: /healthz
              port: 3000
            periodSeconds: 5 # periodo entre cada health check
            failureThreshold: 1 # limite de falhas para considerar não health
            timeoutSeconds: 1 # limite de tempo para timeout
            successThreshold: 1 # limite de provas para considerar health

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret

          volumeMounts:
            - mountPath: "/app/myFamily"
              name: config

      volumes:
        - name: config
          configMap:
            name: goserver-family
            items:
            - key: members
              path: "family.txt"